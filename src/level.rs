use crate::brick::Brick;

pub struct Level {
    pub brick_positions: Vec<(f32, f32)>,
}

impl Level {
    pub fn all() -> Vec<Level> {
        vec![
            Level {
                brick_positions: Brick::layout()
                .into_iter()
                .map(|b| (b.x, b.y))
                .collect(),
            },
            Level { brick_positions: vec![
                // 1. vrstica
                (35.0 + 1.0 * 65.0, 40.0), (35.0 + 2.0 * 65.0, 40.0),
                (35.0 + 6.0 * 65.0, 40.0), (35.0 + 7.0 * 65.0, 40.0),
                // 2. vrstica
                (35.0 + 0.0 * 65.0, 65.0), (35.0 + 1.0 * 65.0, 65.0), (35.0 + 2.0 * 65.0, 65.0),
                (35.0 + 3.0 * 65.0, 65.0), (35.0 + 4.0 * 65.0, 65.0), (35.0 + 5.0 * 65.0, 65.0),
                (35.0 + 6.0 * 65.0, 65.0), (35.0 + 7.0 * 65.0, 65.0), (35.0 + 8.0 * 65.0, 65.0),
                (35.0 + 9.0 * 65.0, 65.0),
                // 3. vrstica
                (35.0 + 0.0 * 65.0, 90.0), (35.0 + 1.0 * 65.0, 90.0), (35.0 + 2.0 * 65.0, 90.0),
                (35.0 + 3.0 * 65.0, 90.0), (35.0 + 4.0 * 65.0, 90.0), (35.0 + 5.0 * 65.0, 90.0),
                (35.0 + 6.0 * 65.0, 90.0), (35.0 + 7.0 * 65.0, 90.0), (35.0 + 8.0 * 65.0, 90.0),
                (35.0 + 9.0 * 65.0, 90.0),
                // 4. vrstica
                (35.0 + 1.0 * 65.0, 115.0), (35.0 + 2.0 * 65.0, 115.0), (35.0 + 3.0 * 65.0, 115.0),
                (35.0 + 4.0 * 65.0, 115.0), (35.0 + 5.0 * 65.0, 115.0), (35.0 + 6.0 * 65.0, 115.0),
                (35.0 + 7.0 * 65.0, 115.0), (35.0 + 8.0 * 65.0, 115.0),
                // 5. vrstica
                (35.0 + 2.0 * 65.0, 140.0), (35.0 + 3.0 * 65.0, 140.0),
                (35.0 + 4.0 * 65.0, 140.0), (35.0 + 5.0 * 65.0, 140.0),
                (35.0 + 6.0 * 65.0, 140.0), (35.0 + 7.0 * 65.0, 140.0),
                // 6. vrstica
                (35.0 + 3.0 * 65.0, 165.0), (35.0 + 4.0 * 65.0, 165.0),
                (35.0 + 5.0 * 65.0, 165.0), (35.0 + 6.0 * 65.0, 165.0),
                ]
            },
        ]
    }

    pub fn spawn_bricks(&self) -> Vec<Brick> {
        self.brick_positions
            .iter()
            .map(|&(x,y)| Brick::new(x,y))
            .collect()
    }
}
